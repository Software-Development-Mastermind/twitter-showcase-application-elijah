{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\walke\\\\OneDrive\\\\Desktop\\\\twitter-showcase-app\\\\front-end\\\\src\\\\components\\\\Random\\\\Random.js\";\nimport \"./Random.css\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Random = () => {\n  // const [randomData, setRandomData] = useState(\"\");\n  // useEffect(() => {\n  //     fetch(\"/randomData\")\n  //         .then((res) => res.json())\n  //         .then((data) => {\n  //             setRandomData(data);\n  //             console.log(data);\n  //         });\n  // }, []);\n\n  const testArray = [1, 2, 3, 4, 5]; //This will be replaced with user ID's to send GET requests to pull one of their tweets\n\n  const handleClick = e => {\n    e.preventDefault();\n    const RNG = Math.floor(Math.random() * testArray.length);\n    const result = testArray[RNG];\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"random-header\",\n      children: \"Random Tweet Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"random-text\",\n      children: \"random body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Get A Random Tweet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = Random;\nexport default Random;\nvar _c;\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"names":["useEffect","useState","Button","Random","testArray","handleClick","e","preventDefault","RNG","Math","floor","random","length","result","console","log"],"sources":["C:/Users/walke/OneDrive/Desktop/twitter-showcase-app/front-end/src/components/Random/Random.js"],"sourcesContent":["import \"./Random.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Random = () => {\r\n    // const [randomData, setRandomData] = useState(\"\");\r\n    // useEffect(() => {\r\n    //     fetch(\"/randomData\")\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             setRandomData(data);\r\n    //             console.log(data);\r\n    //         });\r\n    // }, []);\r\n\r\n    const testArray = [1, 2, 3, 4, 5]; //This will be replaced with user ID's to send GET requests to pull one of their tweets\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const RNG = Math.floor(Math.random() * testArray.length);\r\n        const result = testArray[RNG];\r\n        console.log(result);\r\n    };\r\n\r\n    return (\r\n        <div className=\"random-container\">\r\n            <h1 className=\"random-header\">Random Tweet Page</h1>\r\n            <p className=\"random-text\">random body</p>\r\n            {/* {randomData.data} */}\r\n\r\n            <Button onClick={handleClick}>Get A Random Tweet!</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Random;\r\n"],"mappings":";AAAA,OAAO,cAAc;AACrB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,iBAAiB;AAAC;AAEzC,MAAMC,MAAM,GAAG,MAAM;EACjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEnC,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,SAAS,CAACQ,MAAM,CAAC;IACxD,MAAMC,MAAM,GAAGT,SAAS,CAACI,GAAG,CAAC;IAC7BM,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACvB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC7B;MAAI,SAAS,EAAC,eAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACpD;MAAG,SAAS,EAAC,aAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAG1C,QAAC,MAAM;MAAC,OAAO,EAAER,WAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEd,CAAC;AAAC,KA7BIF,MAAM;AA+BZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}